// Generated by CoffeeScript 1.10.0
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  exports.Message = (function() {
    function Message(attributes) {
      if (attributes == null) {
        attributes = {
          'data-placeholder': "Leave a message."
        };
      }
      this.keyup = bind(this.keyup, this);
      this.placeholder = bind(this.placeholder, this);
      this.json = bind(this.json, this);
      this.cleave = bind(this.cleave, this);
      this.pure = $("<div class=\"message cell\" contentEditable=\"true\"></div>");
      this.pure.attr(attributes);
    }

    Message.prototype.cleave = function(outer_height, duration) {
      var distance, height, keyframe, phase_start, sister, start;
      if (duration == null) {
        duration = 250;
      }
      keyframe = function(time, callback) {
        return setTimeout(callback, time);
      };
      height = outer_height - 8 - 2;
      distance = outer_height + 2;
      console.log("got height, distance, duration", outer_height, distance, duration);
      duration = {
        'interphase': (height / distance) * duration,
        'anaphase': (8 / distance) * duration,
        'telophase': (2 / distance) * duration
      };
      phase_start = function(keyframe) {
        switch (keyframe) {
          case 'interphase':
            return 0;
          case 'anaphase':
            return phase_start('interphase') + duration['interphase'];
          case 'telophase':
            return phase_start('anaphase') + duration['anaphase'];
        }
      };
      start = _(duration).mapObject(function(d, phase) {
        return phase_start(phase);
      });
      this.pure.attr('contentEditable', false);
      this.pure.css({
        'padding-top': 0,
        'border-top-width': 0,
        'margin-top': 0,
        '-webkit-border-top-right-radius': 0,
        '-webkit-border-top-left-radius': 0,
        '-moz-border-radius-topright': 0,
        '-moz-border-radius-topleft': 0,
        'border-top-right-radius': 0,
        'border-top-left-radius': 0
      });
      sister = new exports.Message();
      sister.pure.css({
        'height': 0,
        'padding-bottom': 0,
        'border-bottom-width': 0,
        'margin-bottom': 0,
        '-webkit-border-bottom-right-radius': 0,
        '-webkit-border-bottom-left-radius': 0,
        '-moz-border-radius-bottomright': 0,
        '-moz-border-radius-bottomleft': 0,
        'border-bottom-right-radius': 0,
        'border-bottom-left-radius': 0
      });
      sister.pure.insertBefore(this.pure);
      keyframe(start['interphase'], (function(_this) {
        return function() {
          return sister.pure.animate({
            height: outer_height + "px"
          }, duration['interphase'], "swing");
        };
      })(this));
      keyframe(start['anaphase'], (function(_this) {
        return function() {
          _this.pure.animate({
            'padding-top': '4px'
          }, duration['anaphase'], "linear", function() {
            return _this.pure.css({
              '-webkit-border-top-right-radius': "2px",
              '-webkit-border-top-left-radius': "2px",
              '-moz-border-radius-topright': "2px",
              '-moz-border-radius-topleft': "2px",
              'border-top-right-radius': "2px",
              'border-top-left-radius': "2px"
            });
          });
          return sister.pure.animate({
            'padding-bottom': "4px"
          }, duration['anaphase'], "linear", function() {
            return sister.pure.css({
              '-webkit-border-bottom-right-radius': "2px",
              '-webkit-border-bottom-left-radius': "2px",
              '-moz-border-radius-bottomright': "2px",
              '-moz-border-radius-bottomleft': "2px",
              'border-bottom-right-radius': "2px",
              'border-bottom-left-radius': "2px"
            });
          });
        };
      })(this));
      keyframe(start['telophase'], (function(_this) {
        return function() {
          _this.pure.css('border-top-width', "1px");
          _this.pure.animate({
            'margin-top': '2px'
          }, duration['telophase']);
          sister.pure.css('border-bottom-width', "1px");
          return sister.pure.animate({
            'margin-bottom': "2px"
          }, duration['telophase'], function() {
            return sister.pure.css('height', "");
          });
        };
      })(this));
      return [sister, this];
    };

    Message.prototype.json = function(maybe_json) {
      var json;
      if ((json = maybe_json) != null) {
        return pass;
      } else {
        return {
          content: this.pure.html()
        };
      }
    };

    Message.prototype.placeholder = function(maybe_placeholder) {
      var placeholder;
      if ((placeholder = maybe_placeholder) != null) {
        this.pure.attr('data-placeholder', placeholder);
        return this;
      } else {
        return this.pure.attr('data-placeholder');
      }
    };

    Message.prototype.keyup = function(callback) {
      return this.pure.keyup(callback);
    };

    return Message;

  })();

}).call(this);

//# sourceMappingURL=Message.js.map
